<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Java解析XML文件]]></title>
      <url>tbwang.win/java%E8%A7%A3%E6%9E%90xml%E6%96%87%E4%BB%B6.html</url>
      <content type="html"><![CDATA[<h2 id="DOM4J简介"><a href="#DOM4J简介" class="headerlink" title="DOM4J简介"></a>DOM4J简介</h2><p>Dom4j是一个易用的、开源的库，用于XML，XPath和XSLT。它应用于Java平台，采用了Java集合框架并完全支持DOM，SAX和JAXP。</p>
<h2 id="获取Document对象的三种方式"><a href="#获取Document对象的三种方式" class="headerlink" title="获取Document对象的三种方式"></a>获取Document对象的三种方式</h2><p>解析XML过程是通过获取Document对象，然后继续获取各个节点以及属性等操作，因此获取Document对象是第一步，大体说来，有三种方式：</p>
<blockquote>
<p>1.自己创建Document对象</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Document document = DocumentHelper.createDocument();  </div><div class="line">        Element root = document.addElement(<span class="string">"element"</span>);</div></pre></td></tr></table></figure>
<blockquote>
<p>2.通过读取XML文件获取Document对象</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//创建SAXReader对象  </span></div><div class="line">SAXReader reader = <span class="keyword">new</span> SAXReader();  </div><div class="line"><span class="comment">//读取文件 转换成Document  </span></div><div class="line">Document document = reader.read(<span class="keyword">new</span> File(<span class="string">"XXXX.xml"</span>));</div></pre></td></tr></table></figure>
<blockquote>
<p>3.读取XML文本内容获取Document对象</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String xmlStr = <span class="string">"&lt;students&gt;......&lt;/students&gt;"</span>;  </div><div class="line">Document document = DocumentHelper.parseText(xmlStr);</div></pre></td></tr></table></figure>
<h2 id="读取XML内容"><a href="#读取XML内容" class="headerlink" title="读取XML内容"></a>读取XML内容</h2><blockquote>
<p>Java代码</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readXmlFile</span><span class="params">()</span> <span class="keyword">throws</span> DocumentException</span>&#123;</div><div class="line">    <span class="comment">// 创建saxReader对象</span></div><div class="line">    SAXReader reader = <span class="keyword">new</span> SAXReader();</div><div class="line">    <span class="comment">// 通过read方法读取一个文件 转换成Document对象</span></div><div class="line">    Document document = reader.read(<span class="keyword">new</span> File(<span class="string">"src/xml/test.xml"</span>));</div><div class="line">    <span class="comment">//获取根节点元素对象</span></div><div class="line">    Element node = document.getRootElement();</div><div class="line">    <span class="comment">//遍历所有的元素节点</span></div><div class="line">    listNodes(node);</div><div class="line">&#125;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * 遍历当前节点元素下面的所有(元素的)子节点</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> node</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">listNodes</span><span class="params">(Element node)</span> </span>&#123;</div><div class="line">    System.out.println(<span class="string">"当前节点的名称：："</span> + node.getName());</div><div class="line">    <span class="comment">// 获取当前节点的所有属性节点</span></div><div class="line">    List&lt;Attribute&gt; list = node.attributes();</div><div class="line">    <span class="comment">// 遍历属性节点</span></div><div class="line">    <span class="keyword">for</span> (Attribute attr : list) &#123;</div><div class="line">        System.out.println(attr.getText() + <span class="string">"-----"</span> + attr.getName()</div><div class="line">                + <span class="string">"---"</span> + attr.getValue());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (!(node.getTextTrim().equals(<span class="string">""</span>))) &#123;</div><div class="line">        System.out.println(<span class="string">"文本内容：：：："</span> + node.getText());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 当前节点下面子节点迭代器</span></div><div class="line">    Iterator&lt;Element&gt; it = node.elementIterator();</div><div class="line">    <span class="comment">// 遍历</span></div><div class="line">    <span class="keyword">while</span> (it.hasNext()) &#123;</div><div class="line">        <span class="comment">// 获取某个子节点对象</span></div><div class="line">        Element e = it.next();</div><div class="line">        <span class="comment">// 对子节点进行遍历</span></div><div class="line">        listNodes(e);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>XML文件内容</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">wang</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>书籍<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">book1</span>&gt;</span>十万个冷笑话<span class="tag">&lt;/<span class="name">book1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">book2</span>&gt;</span>万万没想到<span class="tag">&lt;/<span class="name">book2</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">wang</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[XML基础知识]]></title>
      <url>tbwang.win/XML%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0.html</url>
      <content type="html"><![CDATA[<blockquote>
<h3 id="什么是XML语言？"><a href="#什么是XML语言？" class="headerlink" title="什么是XML语言？"></a>什么是XML语言？</h3></blockquote>
<p>XML时可扩展标记语言(Extensible Markup Language),它和Html类似，是一种标记语言，主要用来传输和结构化存储数据。</p>
<a id="more"></a>
<blockquote>
<h3 id="XML和HTML的区别"><a href="#XML和HTML的区别" class="headerlink" title="XML和HTML的区别"></a>XML和HTML的区别</h3></blockquote>
<p>它不是HTML的替代，二者的设计目的不同。XML主要用来传输和存储数据，其焦点是数据的内容，HTML则是设计用来显示数据，焦点是数据的外观。HTML旨在显示数据，XML则旨在传输数据。</p>
<blockquote>
<h3 id="XML的特点"><a href="#XML的特点" class="headerlink" title="XML的特点"></a>XML的特点</h3></blockquote>
<ul>
<li>XML是个纯文本，有能力处理纯文本的软件都可以处理XML文件。</li>
<li>XML没有预定义的标签，你可以自己定义自己的标签和自己的文档结构，比如<wang>….</wang>,这一点与HTML是不同的。</li>
<li>XML是独立于软件和硬件的信息传输工具，是目前各种应用程序中进行数据传输的最常用的工具，并且在信息存储和描述领域变得越来越流行。它可以简化数据传输、简化平台变更、是你的数据更加有用。</li>
</ul>
<blockquote>
<h3 id="XML基本语法规则"><a href="#XML基本语法规则" class="headerlink" title="XML基本语法规则"></a>XML基本语法规则</h3></blockquote>
<ol>
<li>所有的XML都要有关闭标签。<code>注：声明不属于XML本身的组成部分。它不是 XML 元素，也不需要关闭标签。</code></li>
<li>XML标签对大小写敏感，必须使用相同的大小写来编辑打开、关闭标签。</li>
<li>XML文档必须有根目录，作为其他所有元素的父元素</li>
<li>XML的属性值必须加引号,下面的date不加引号是错的。<br> <code>&lt;note date=08/08/2008&gt;</code><br> <code>&lt;to&gt;George&lt;/to&gt;</code><br> <code>&lt;from&gt;John&lt;/from&gt;</code><br> <code>&lt;/note&gt;</code></li>
<li>XML的注释的写法 <code>&lt;!--This is a comment--&gt;</code></li>
<li>XML中的空格会被保留，HTML中的多个空格会被合并成一个，XML不会</li>
<li>如果属性值本身包含双引号，那么有必要使用单引号包围它，就像这个例子：<br><code>&lt;gangster name=&#39;George &quot;Shotgun&quot; Ziegler&#39;&gt;</code><br>或者可以使用实体引用：<br><code>&lt;gangster name=&quot;George &amp;quot;Shotgun&amp;quot; Ziegler&quot;&gt;</code></li>
<li>实体引用 <em>这部分要重点说一下</em>，在XML中，一些字符拥有特殊的意义，如果你把字符“&lt;”放在xml元素中，就会发生错误，因为解析器会把它们当作新的开始进行解析，比如下面的写法就是错误的。<br><code>&lt;message&gt; if salary &lt; 10000 then &lt;/message&gt;</code><br>为了避免这个错误，请使用实体引用来代替“&lt;”字符<br><code>&lt;message&gt;if salary &amp;lt; 1000 then&lt;/message&gt;</code><br>在XML中，有5个预定义的实体饮用</li>
</ol>
<table>
<thead>
<tr>
<th><code>&amp;lt;</code></th>
<th>&lt;</th>
<th>小于</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&amp;gt;</code></td>
<td>&gt;</td>
<td>大于</td>
</tr>
<tr>
<td><code>&amp;amp;</code></td>
<td>&amp;</td>
<td>和号</td>
</tr>
<tr>
<td><code>&amp;apos;</code></td>
<td>‘</td>
<td>单引号</td>
</tr>
<tr>
<td><code>&amp;quot;</code></td>
<td>“</td>
<td>引号</td>
</tr>
</tbody>
</table>
<blockquote>
<h3 id="什么是XML元素？"><a href="#什么是XML元素？" class="headerlink" title="什么是XML元素？"></a>什么是XML元素？</h3></blockquote>
<p>XML元素指的是从(且包括)开始标签到结束标签的部分，元素可以包含其他元素、文本、或者二者的混合物。元素可以拥有属性</p>
<blockquote>
<h3 id="XML命名规则"><a href="#XML命名规则" class="headerlink" title="XML命名规则"></a>XML命名规则</h3></blockquote>
<p>XML 元素必须遵循以下命名规则：</p>
<ul>
<li>名称可以含字母、数字以及其他的字符</li>
<li>名称不能以数字或者标点符号开始</li>
<li>名称不能以字符 “xml”（或者 XML、Xml）开始</li>
<li>名称不能包含空格</li>
<li>可使用任何名称，没有保留的字词。</li>
</ul>
<blockquote>
<h3 id="XML-DTD"><a href="#XML-DTD" class="headerlink" title="XML DTD"></a>XML DTD</h3></blockquote>
<p>DTD 的作用是定义 XML 文档的结构。它使用一系列合法的元素来定义文档结构：</p>
<pre><code>&lt;!DOCTYPE note [
  &lt;!ELEMENT note (to,from,heading,body)&gt;
  &lt;!ELEMENT to      (#PCDATA)&gt;
  &lt;!ELEMENT from    (#PCDATA)&gt;
  &lt;!ELEMENT heading (#PCDATA)&gt;
  &lt;!ELEMENT body    (#PCDATA)&gt;
]&gt; 
</code></pre><p><a href="http://www.w3school.com.cn/xml/xml_validator.asp" target="_blank" rel="external">XML语法验证</a></p>
<blockquote>
<p>XML和CSS结合使用</p>
</blockquote>
<p>这个不是推荐的写法，如果要用可以参考<a href="http://www.w3school.com.cn/xml/xml_display.asp" target="_blank" rel="external">W3School教程</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令]]></title>
      <url>tbwang.win/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</url>
      <content type="html"><![CDATA[<blockquote>
<h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3></blockquote>
<p><strong>按规则查找某个文件或文件夹，包括子目录,这里的<code>*</code>表示0个或多个占位符，<code>?</code>表示一个占位符</strong></p>
<ul>
<li><code>find . -name &#39;*.sh&#39;</code> – 以.sh结尾的文件</li>
<li><code>find . -name &#39;*channel*&#39;</code> – 包含channel字符的文件</li>
<li><code>find . -name &#39;build*&#39;</code>– 以build开头的文件</li>
<li><code>find . -name &#39;abc??&#39;</code>– abc后面有两个字符的文件</li>
</ul>
<a id="more"></a>
<blockquote>
<h3 id="grep-Global-Regular-Expression-Print"><a href="#grep-Global-Regular-Expression-Print" class="headerlink" title="grep (Global Regular Expression Print)"></a>grep (Global Regular Expression Print)</h3></blockquote>
<p><strong>查找内容包含指定的范本样式的文件</strong></p>
<ul>
<li><code>grep -n pattern files</code>  – 规则 -n表示显示行号</li>
<li><code>grep -n &#39;tbwang.win&#39; robots.txt</code> 查找该目录下的robots.txt文件中的关键词<code>tbwang.win</code>所在的行信息，关键词上的单引号可加可不加,注意子目录文件中的信息不会被检索</li>
<li><code>grep -i pattern files</code>：不区分大小写地搜索。默认情况区分大小写  </li>
<li><code>grep -w pattern files</code>：只匹配整个单词，而不是字符串的一部分（如匹配‘magic’，而不是‘magical’） </li>
<li><code>grep -C number pattern files</code> ：匹配的上下文分别显示[number]行</li>
<li><code>grep pattern1 | pattern2 files</code>：显示匹配 pattern1 或 pattern2 的行</li>
<li><code>grep pattern1 files | grep pattern2</code>：显示既匹配 pattern1 又匹配 pattern2 的行。 </li>
</ul>
<p><strong> grep命令经常和其他命令一起使用 </strong></p>
<ul>
<li><code>ls -l | grep source</code> —找到当前目录下叫<code>source</code>的文件夹或文件</li>
<li><code>ps -ef | grep custCenter</code> —查找当前叫<code>custCenter</code>的进程名,杀进程的时候会使用到</li>
</ul>
<blockquote>
<h3 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h3></blockquote>
<p><strong>tail [-f] [-c Number | -n Number | -m Number | -b Number | -k Number] [File]</strong><br><strong>从指定点开始将文件写到标准输出。使用tail命令的-f选项可以方便的查阅正在改变的日志文件，tail -f filename会把filename里最尾部的内容显示在屏幕上，并且不断刷新，使你看到最新的文件内容。</strong></p>
<ul>
<li><code>tail -f test.log</code> —循环查看文件内容，Ctrl＋c来终止</li>
<li><code>tail -n 5 test.log</code> —显示文件最后5行内容</li>
<li><code>tail -n +5 test.log</code>—从第5行开始显示文件</li>
</ul>
<blockquote>
<h3 id="more"><a href="#more" class="headerlink" title="more"></a>more</h3></blockquote>
<p><strong>more [-dlfpcsu] [-num] [+/ pattern] [+linenum] [file…]</strong><br><strong>more命令和cat的功能一样都是查看文件里的内容，但有所不同的是more可以按页来查看文件的内容，还支持直接跳转行等功能。</strong></p>
<ul>
<li><code>more +3 test.log</code> —显示文件中从第3行起的内容</li>
<li><code>more -5 test.log</code> —设定每屏显示行数</li>
<li><code>ls -l | more -5</code> —每页显示5个文件信息</li>
<li><code>more +/day3 test.log</code> —查找第一个出现”day3”字符串的行，并从该处前两行开始显示输出</li>
</ul>
<blockquote>
<h3 id="less"><a href="#less" class="headerlink" title="less"></a>less</h3></blockquote>
<p><strong>less [options] [file…]</strong><br><strong>与more命令一样，less命令也用来分屏显示文件的内容。但是二者存在差别：less命令允许用户向前或向后浏览文件，而more命令只能向前浏览。用less命令显示文件时，用PageUp键向上翻页，用PageDown键向下翻页。要退出less程序，应按Q键。</strong></p>
<ul>
<li><code>less test.log</code> —查看文件</li>
<li><code>ps -ef | less</code> —查看进程信息并通过less分页显示</li>
<li><code>history | less</code> —查看命令历史使用记录并通过less分页显示</li>
<li><code>less test1.log test2.log</code> —浏览多个文件，n和p切换文件</li>
</ul>
<blockquote>
<h3 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h3></blockquote>
<p><strong>主要用来监控系统信息变化，每隔一段时间重复运行一个命令，默认间隔时间是2秒。要运行的命令直接传给shell（注意引用和转义特殊字符）。结果会展示为全屏模式，这样你可以很方便的观察改变</strong></p>
<ul>
<li><code>watch -n 60 date</code> —执行date命令每分钟一次，输入^C 退出</li>
<li><code>watch -d ls -l</code> —查看目录变化</li>
<li><code>watch -d ’ls -l | fgrep joe’</code> —想找joe用户的文件</li>
<li><code>watch -d &#39;ls -l|grep scf&#39;</code> —监测当前目录中 scf’ 的文件的变化</li>
<li><code>watch -n 10 &#39;cat /proc/loadavg&#39;</code> —10秒一次输出系统的平均负载</li>
<li><code>watch -n 1 -d netstat -ant</code> —每隔一秒高亮显示网络链接数的变化</li>
<li><code>watch -n 1 -d &#39;pstree | grep http&#39;</code> —每隔一秒高亮显示http链接数的变化<pre><code>注：Mac系统下终端没有watch命令
</code></pre></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一个java高级工程师的进阶之路]]></title>
      <url>tbwang.win/%E4%B8%80%E4%B8%AAjava%E9%AB%98%E7%BA%A7%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%BF%9B%E9%98%B6%E4%B9%8B%E8%B7%AF.html</url>
      <content type="html"><![CDATA[<h3 id="宏观方面"><a href="#宏观方面" class="headerlink" title="宏观方面"></a>宏观方面</h3><blockquote>
<p>JAVA</p>
</blockquote>
<p>要想成为JAVA（高级）工程师肯定要学习JAVA。一般的程序员或许只需知道一些JAVA的语法结构就可以应付了。但要成为JAVA（高级）工程师，您要对JAVA做比较深入的研究。您应该多研究一下JDBC、IO包、Util包、Text包、JMS、EJB、RMI、线程。如果可能，希望您对JAVA的所有包都浏览一下，知道大概的API，这样您就发现其实您想实现的很多功能，通过JAVA的API都可以实现了，就不必自己费太多的脑经了。 </p>
<a id="more"></a>
<blockquote>
<p>设计模式</p>
</blockquote>
<p>其实写代码是很容易的事情，我相信您也有同感。但如何写得好就比较难了。这个“好”字包括代码可重用性，可维护性，可扩展性等。如何写出好的代码往往要借助一些设计模式。当然长期的代码经验积累，只要您用心，会使您形成自己代码风格。相信您的代码也比较符合代码的可重用性，可维护性，可扩展性。但既然前人已经给我们总结出了经验，我们何不踩着前人的肩膀前进？ </p>
<blockquote>
<p>XML</p>
</blockquote>
<p>现在的系统中不使用XML几乎是不可能的。XML的功能非常强大，它可以做数据转换、做系统的配置、甚至可保存您的系统业务数据。因此您必须了解XML，包括它的语法，结构。您还需要比较熟练的使用解析XML的一些API，比如JDOM，SAX等，因为在我们一般的项目中，XML往往担当系统配置信息的作用，您需要用这些API解析这些配置信息，开发完美的项目。 </p>
<blockquote>
<p>精通使用一种或两种框架</p>
</blockquote>
<p>像在《如何成为java初级程序员》中提到的那样，“框架都会有许多可重用的代码，良好的层次关系和业务控制逻辑，基于框架的开发使你可以省出很多的开发成本”。但我这里希望您能精通，更多的是希望您能通过框架的使用了解框架的思想。这样您在开发一个项目时思路会开阔一些，比如您会想到把SQL语句与您的JAVA代码分开，再比如您会考虑把您的业务逻辑配置到XML或者数据库中，这样整个项目就很容易扩张了。 </p>
<blockquote>
<p>熟悉主流数据库。</p>
</blockquote>
<p>其实真正比较大的项目都是有人专门做数据库的，但往往很多项目要求作为（高级）工程师的您也参与数据库的设计以及SQL的编写。所以为了更好的为国家做贡献，建议您还是多了解一些主流数据库，比如SQLSERVER，ORACLE，多连接SQL和存储过程以及触发器。如果您不是“科班”出身，您还需要补充一些数据库原理方面的知识。 </p>
<blockquote>
<p>精通一种或两种WEBServer。</p>
</blockquote>
<p>尽管我在《如何成为java初级程序员》里讲过它，我还是要强调您要精通一种或两种。因为作为JAVA工程师，特别时想成为高级JAVA工程师的您，您不可避免地要部署您的项目到WebServer上，而且只有当您精通一种WebServer，您才可能最大限度地使用它的资源，这往往可以节省很多时间和精力。 </p>
<blockquote>
<p>UML</p>
</blockquote>
<p>我知道您肯定想成为高级工程师，因此您有必要了解或熟练或精通UML，这取决于您有多大决心想成为高级工程师和项目经理。在比较正规的开发团队中，UML是讨论项目的交流工具，您要想做一个软件工程师，您至少要能看懂，您要想做高级工程师，您要能通过它来描述您对项目的理解，尽管这不是必须，但却很重要。 </p>
<blockquote>
<p>站在高度分析问题</p>
</blockquote>
<p>这不是一个知识点，也不是通过书本就能学得到的。只所以提到这一点，是因为我比您还着急，我希望您更快的成为一个高级的软件工程师，而不是一个一般的软件工程师。希望您在工作中多向您的系统分析员、需求分析员、系统设计员学习，多站在他们角度上去看您在开发的项目。在最好在项目之初先在您的脑海里对项目有个大致的分析、设计，然后和他们进行比较，找找差别，想想缺点。 </p>
<blockquote>
<p>IDE工具。</p>
</blockquote>
<p>与在《如何成为java初级程序员》里提到的不同，您在这个阶段可能接触到不同的工具了，尽管您还需要使用JB或者IDEA，但能可能对ROSE，Together要多了解一些，因为您要画UML了。不要再对Dreamweaver等HTML编辑器情有独钟了，那些JSP页面让初级程序员去写吧</p>
<h3 id="微观方面"><a href="#微观方面" class="headerlink" title="微观方面"></a>微观方面</h3><blockquote>
<p>Core Java部分</p>
</blockquote>
<p>这是最基础的,对于一个java高级开发/设计人员,你需要对这一部分达到精通的水平,重点内容如下:</p>
<ul>
<li>面向对象编程思想(封装继承多态接口)</li>
<li>字符串处理</li>
<li>java.lang包,java.util包等常用包</li>
<li>java异常处理</li>
</ul>
<blockquote>
<p>Java高级部分</p>
</blockquote>
<ul>
<li>Java I/O流</li>
<li>Java多线程技术</li>
<li>Java网络编程</li>
<li>Java Swing<br>后两项可以了解即可,如果项目需要可以深入研究</li>
</ul>
<blockquote>
<p>前端基本技能</p>
</blockquote>
<ul>
<li>HTML + CSS网页开发</li>
<li>JavaScript</li>
<li>Jquery</li>
<li>浏览器兼容性 CSS hack(了解)</li>
<li>熟练使用JSP + Servlet进行开发</li>
<li>MVC设计模式,原理,以及相关框架,如Struts</li>
<li>SSH框架</li>
<li>缓存技术 session &amp; cookie</li>
<li>熟练使用一种以上Java开发工具                  （Eclipse/MyEclipse/Jbuilder/Jcreator/IntelliJIEDA/NetBeans）</li>
<li>熟练使用XML<pre><code>JDOM w3c.dom SAX
</code></pre></li>
<li>Java设计模式<pre><code>工厂模式,单例模式 ==
</code></pre></li>
<li>Java反射机制<pre><code>反射的各种用法
</code></pre></li>
<li>了解或熟悉 C, C++, .NET</li>
<li>熟悉JDK的配置,环境变量</li>
<li>数据库oracle必学,其他最好了解一种以上(mysql,sql server,access==)<pre><code>oracle:视图,索引,存储过程,触发器,游标,包,常用函数 ==
</code></pre></li>
<li>数据库原理<pre><code>事务的原理,锁机制,表连接,复杂查询语句(工作经验),性能调优,锁表以及解决方案==
</code></pre></li>
<li>JDBC,连接池</li>
<li>Ajax,反向Ajax</li>
<li>HTTP协议,request 和 response的原理,HTTP status(了解常用* Https原理</li>
<li>熟悉Linux基本命令,使用过Linux/Unix系统,可以编写shell脚本,可以在Linux上部署项目</li>
<li>了解windows系统批处理脚本bat</li>
<li>了解HTML5,最好学习过</li>
<li>熟悉一种JS框架,如Prototype</li>
<li>J2EE原理 熟悉一种以上web容器如      <pre><code>Tomcat,JBoss,websphere,weblogic==
</code></pre></li>
<li>熟悉ant或maven</li>
<li>熟悉一门脚本语言,如python ,ruby</li>
<li>了解php/ asp</li>
<li>了解ftp协议及原理</li>
<li>熟练使用Junit测试,熟悉Mockito等测试工具</li>
<li>熟悉javac,javadoc,native,native2ascii等常用命令</li>
<li>熟悉常用的排序算法,如冒泡排序,快速排序等,最好自己研究过一些的算法。</li>
<li>了解Flex(不学也没关系)</li>
<li>了解敏捷开发模式</li>
<li>工作流workflow至少用过一种,如OSworkflow,了解原理</li>
<li>使用过VPN了解其原理</li>
<li>熟悉jstl表达式和el表达式</li>
<li>熟悉webservice,WSDL,SOAP</li>
<li>图片处理,如图片上传,预览,限制大小等</li>
<li>版本控制工具,CVS VSS SVN</li>
<li>JSON技术,JSON+AJAX</li>
<li>分页技术,最好自己实现过不仅仅是用过要知道原理</li>
<li>Java Mail</li>
<li>Java读写txt,excel,JXL技术</li>
<li>JVM原理,JVM内存管理,GC,Java堆栈池</li>
<li>熟练使用下面的工具:<pre><code>office办公软件,word,excel,ppt等
plsql,sqldevelop 数据库开发工具
outlook大公司都用
ue编辑器
浏览器控制台,调试
SHH/PUTTY 远程
</code></pre></li>
<li>UML建模工具Rational Rose等</li>
<li>使用log4j</li>
<li>使用过开放Api如百度，腾讯街景，新浪微博等</li>
<li>页面静态化技术（伪静态页面）</li>
<li>报表技术，使用过报表制作工具，如水晶易表。</li>
<li>定时任务，如Spring batch ,学会自定义batch任务（不适用第三方工具）</li>
<li>了解uuid</li>
<li>b/s 和 c/s架构</li>
<li>正则表达式</li>
<li>了解jndi jms</li>
<li>ERP</li>
<li>UNICODE编码，乱码解决</li>
<li>开源网络编辑器，如ckEditor</li>
<li>二进制原理</li>
<li>使用过，了解过开源论坛框架，如discuzz</li>
<li>GWT，Closure框架</li>
<li>了解大数据，云计算</li>
<li>搜索引擎搜索技术</li>
<li>软件工程，项目管理</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[写在2017]]></title>
      <url>tbwang.win/%E5%86%99%E5%9C%A82017.html</url>
      <content type="html"><![CDATA[<p id="div-border-left-red">2016年转眼即过，在这一年经历了太多的事情。买房、学车、结婚、买车、辞职、重新找工作</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今晚就好好整理下这一年来做的事情，留作以后记忆。</p>
<p></p><p id="div-border-left-red">买房</p><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;生在中国，永远避免不了买房子的事情。还记得在之前在苏州的时候，租住的小区房价才一万出头，转眼间仅仅不到一年的时间，房价便扶摇直上两万五。有时候感觉辛辛苦苦赚的钱在房价面前屁都不是。有可能你一年奋斗的钱都不够一个政策带来的几天的收益。<br>来到南京后，因为认识了我媳妇决定在南京定居。不可避免的买房也逐渐提上日程。南京的房价一直以来都居高不下，3月初去看房子的时候那时候房子还不是太火爆，销售的态度还是不错的，积极的围绕你跑前跑后，仅仅过了一周，再去看时原来看中的房子都已经卖出大半了。此时的市场已经彻底是卖方市场了，赶紧确定下了户型然后交了定金。这一周的时间让我多花了5万块钱。房老虎果然名不虚传啊！可能今后要住几十年的房子在几十分钟里就被我确定了下来，后来的涨势📈也让我感到了庆幸，虽然说比原来多花了几万，但是接下来如果不买的话还要多花不啥钱。哎，房子这东西还是早买早安心，剩下的不管是涨还是跌就暂时先不管了，不过说实话就南京而言，房子想要降价真的是太难。<br><a id="more"></a><p></p>
<p></p><p id="div-border-left-red">学车</p><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;学车这件事情真的是我高考以来我遇到的最痛苦的一场考试。<br>我在一月份报名学车，科目一没费多少工作二月份过完年看了几小时书就靠过去了，接下来就到了恶心的科目二了。3月份开始学习科目二，驾校分配的科目二教练是一个脸晒的黑黑的、整天板着一张脸的四十多岁的教练，名字就不暴露了。一上车简单的叫了下简单的方向盘、油门、离合的技巧，剩下的自己去学了。我因为工作日要上班，所以只能星期六过来一次，开始时因为觉得时间不着急，偶尔一个月才来学习一次。后续的3个月都没有好好的学习，断断续续去过三四次，这段时间也怪自己太懒散了，因为学车需要提前一天八点钟之前和教练预约，有时候周五起的晚了忘记预约活着预约迟了点，周六就去不了了。时间拖到了6月份，这个月去的次数多了一点，一个月每周去一次，但是这期间只是在简单练习了下倒车出库，可惜每次练的都不是很好，老是容易压到线。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;转眼就到了7月下旬，一直到现在还是在练习倒车入库，去驾校也是想起来就去，想不起来或者是预约失败就索性不去了。天气也逐渐热了起来，心情也越发烦躁，这时候真的有段时间对练车失去了信息，甚至于一度不想去想学车的问题，不想去驾校。这种鸵鸟心态有一段时间占据我的内心。按理说以我的智商练习这个不应该有太多问题。这期间教练态度也不太好。我分析了下原因：<strong>1</strong>我是男的 <strong>2</strong> 我没有送礼<strong>3</strong> 我学的确实有点问题。分析好了原因后，心想不能再继续拖了，因为我计划于九月份结婚换工作，如果驾照一直都拿不到手，那接下来就会特别麻烦。真对以上原因那么就必须采取策略了 。一：送礼 二：每天学车前、学车后都花一点时间好好想想开车的技巧。送礼的事情没什么多说的，这种潜规则每个学车人都会多多少少碰到过，我找到教练，让他每天早上7点多来到驾校第一个教我练车(驾校8点上班)，我早上8点半练完车后就可以直接跑回公司上班去。每周最起码可以学习6次车，这样子一周学车的次数最起码相当于我过去两个月的次数。说实话有钱能使鬼推磨，送完礼之后教练的态度好多了，第二天就带我练起了小四项，就这样练了两周，基本上科目二的所有项目我都练的差不多了，也终于对自己学车自信多了，从这里我的基本感悟就是人任何时候都不能对自己丧失信心，只要努力去做，找到合适的方法，看似很困难的事情其实也没什么。每天早上我在去驾校学车的路上都要好好想想上一次学车总结到的技巧以及自己犯下的错误，学完车以后再继续总结下，两周之后感觉学的差不多了就赶紧预约了8月份的考试，考试前的模拟出了点小插曲，小四项模拟了6把，全国。倒车入库这个我学的最多的一项3把模拟全挂，可能是当时太紧张了。那天回去后都已经夜里面11点了，后来想了想安慰自己心放宽点，就洗洗睡了。第二天考试一把过，说实话当时的心情真的是开心极了，要不是门口看守入口的入口是个男的，我都想抱他一下了。那天真的是特别开心，赶紧给我媳妇、我妈打了个电话，科目二考过了，终于看到了9月份拿到驾照的曙光了哈哈哈哈。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接下来科目三就简单多了，是我老乡教的我，练了四五次之后就预约了科目三的考试，说实话有过科目二的影响，当时抱着考不过的心情去考试的，科目四都没看一眼，结果上午的考试很轻松就考过了，我们一车10个人，我排在倒数第二，挂了3个人。考完科三，突然意识到下午还得考科四，因为之前没想到自己的科三能过，科四也就没怎么看，但是看了下科四的模拟题，感觉跟科一差不了多少，中午花了几十分钟简单看了下下午就去考试了，92分，虽然不是很高但是过了就行。终于抢在了九月初拿到了驾照。回想这半年来的学车经历真的是印象深刻、感慨良多。说实话买房子虽然是大事，但是我从看到买也没多少感觉，就一个下手要快。学车这件事真的是教会了我很多道理。<p></p>
<pre><code>有些事情看似很难，看似完成不了，其实还是你有些方面没有做到位。仔细回想下造成你现在困境的原因，好好静下心总结下，你总会找到方法去解决问题的。
做一件事情一定要保持恒心，吊儿郎当，三天打鱼两天晒网是不可能有什么成绩的。
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[FileZila使用方法]]></title>
      <url>tbwang.win/FileZilla-Doc.html</url>
      <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/3949443-15672782d00886af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a id="more"></a></p>
<h3 id="Mac系统下如何获取linux服务器文件"><a href="#Mac系统下如何获取linux服务器文件" class="headerlink" title="Mac系统下如何获取linux服务器文件"></a>Mac系统下如何获取linux服务器文件</h3><p> Mac系统下我们出了通过终端命令行来获取Linux服务器文件之外，还可以通过<a href="https://filezilla-project.org" target="_blank" rel="external">FileZilla</a>这款软件来直观的选择所需的文件并且下载到本地。</p>
<blockquote>
<p>FileZilla 连接Linux服务器配置信息，有两种方式</p>
</blockquote>
<p>方法一<br><img src="http://upload-images.jianshu.io/upload_images/3949443-7c090c5873cbd8fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置方法一"></p>
<p>方法二<br><img src="http://upload-images.jianshu.io/upload_images/3949443-b1acf9d174b4a380.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置方法二"></p>
<blockquote>
<p>下载所需的文件，点击左侧位置去选择下载保存到本机的地址，右侧直接双击所需文件下载就行</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/3949443-2395018e4e0a5249.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="下载所需文件"></p>
<p>FileZiila其他用法暂时未涉及，后续再增加…</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Markdown使用方法]]></title>
      <url>tbwang.win/Markdown%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html</url>
      <content type="html"><![CDATA[<h2 id="导语"><a href="#导语" class="headerlink" title="导语"></a>导语</h2><blockquote>
<p><a href="http://baike.baidu.com/link?url=W4NFVG2OdlAhRWBFUt8tAFAELA7d7NvaTvi5pJGLmT7c3El2StkWyX2iA9qSjjcOGIClZ85NhdYzBXfKAkIwmAHDy0hct6Cu5xlbMScSIxS" target="_blank" rel="external">Markdown</a> 是一种轻量级的<strong>「标记语言」</strong>，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被<strong>「标记」</strong>、<strong>「语言」</strong>所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的 HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。 </p>
</blockquote>
<a id="more"></a>
<p>在刚才的导语里提到，Markdown 是一种用来写作的轻量级<strong>「标记语言」</strong>，它用简洁的语法代替排版，而不像一般我们用的字处理软件 <em>Word</em> 或 <em>Pages</em> 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。目前来看，支持 Markdown 语法的编辑器有很多，包括很多网站（例如<a href="http://jianshu.io" target="_blank" rel="external">简书</a>）也支持了 Markdown 的文字录入。Markdown 从写作到完成，导出格式随心所欲，你可以导出 HTML 格式的文件用来网站发布，也可以十分方便的导出 PDF 格式，这种格式写出的简历更能得到 HR 的好感。甚至可以利用 <a href="http://www.getcloudapp.com" target="_blank" rel="external">CloudApp</a> 这种云服务工具直接上传至网页用来分享你的文章。</p>
<blockquote>
<p>常用的编辑工具</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/3949443-b30f952c2ff174f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>常用的web编辑器，我选择<a href="http://www.jianshu.com/writer" target="_blank" rel="external">简书在线编辑</a></p>
<p><img src="http://upload-images.jianshu.io/upload_images/3949443-fb18b3b187507188.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="Markdown-语法的简要规则"><a href="#Markdown-语法的简要规则" class="headerlink" title="Markdown 语法的简要规则"></a>Markdown 语法的简要规则</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p><img src="http://upload-images.jianshu.io/upload_images/3949443-78eb6446aea3b21a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="标题">标题</p>
<p>标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加#<br>号即可。</p>
<pre><code># 一级标题
## 二级标题
### 三级标题
</code></pre><p>以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。<br>列表<br>熟悉 HTML 的同学肯定知道有序列表与无序列表的区别，在 Markdown 下，列表的显示只需要在文字前加上-或*<br>即可变为无序列表，有序列表则直接在文字前加1. 2. 3. ,符号要和文字之间加上一个字符的空格。<br><img src="http://upload-images.jianshu.io/upload_images/3949443-04e93a32a7d6d79f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="无序列表与有序列表">无序列表与有序列表</p>
<p>引用<br>如果你需要引用一小段别处的句子，那么就要用引用的格式。<br>例如这样</p>
<p>只需要在文本前加入 &gt; 这种尖括号（大于号）即可<br><img src="http://upload-images.jianshu.io/upload_images/3949443-6b3f885c24fb1808.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="引用">引用</p>
<p>图片与链接<br>插入链接与插入图片的语法很像，区别在一个!号<br>图片为：<code>![](){ImgCap}{/ImgCap}</code><br>链接为：<code>[]()</code></p>
<p>插入图片的地址需要图床，这里推荐<a href="http://weibotuchuang.sinaapp.com" target="_blank" rel="external">围脖图床修复计划</a> 与 <a href="http://www.getcloudapp.com" target="_blank" rel="external">CloudApp</a> 的服务，生成URL地址即可。<br><img src="http://upload-images.jianshu.io/upload_images/3949443-ec9e9cd514238af5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="URL 与图片">URL 与图片</p>
<p>粗体与斜体<br>Markdown 的粗体和斜体也非常简单，用两个 <code>**</code><br>包含一段文本就是粗体的语法，用一个 <code>*</code><br>包含一段文本就是斜体的语法。<br>例如：<strong>这里是粗体</strong> <em>这里是斜体</em> </p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格是我觉得 Markdown 比较累人的地方，例子如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">This</th>
<th style="text-align:center">is</th>
<th style="text-align:center">table</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">asdf</td>
<td style="text-align:center">dsaf</td>
<td style="text-align:center">dsf</td>
</tr>
</tbody>
</table>
<p>表格的语法格式主要用到了 <code>| - :</code><br><code>|</code>主要用来划定列，<code>-</code>用来划分首行与数据，<code>:</code>放在<code>--</code>的前面表示左对齐，后面表示右对齐，两边都有则是中间对齐。</p>
<h3 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h3><p>如果你是个程序猿，需要在文章里优雅的引用代码框，在 Markdown下实现也非常简单，只需要用两个 ` 把中间的代码包裹起来。图例：<br><img src="http://upload-images.jianshu.io/upload_images/3949443-54e86d0eba588bab.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>使用tab键即可缩进。</p>
<pre><code>你好，我是代码框
</code></pre><p>也可以使用顿号来实现<br><code>你好，我也是代码框</code></p>
<p>###分割线<br>分割线的语法只需要三个<code>***</code>号</p>
<hr>
<h2 id="三-相关推荐"><a href="#三-相关推荐" class="headerlink" title="三 相关推荐"></a>三 相关推荐</h2><p><strong>工具</strong><br><em>图床工具用来上传图片获取 URL 地址</em><br><a href="http://droplr.com" target="_blank" rel="external">Droplr</a><br><a href="http://www.getcloudapp.com" target="_blank" rel="external">Cloudapp</a><br><a href="https://itunes.apple.com/cn/app/yi-xiang/id672522335?mt=12&amp;uo=4" target="_blank" rel="external">ezShare for Mac</a><br><a href="http://weibotuchuang.sinaapp.com" target="_blank" rel="external">围脖图床修复计划</a></p>
<p><em>在线好用的Markdown工具，为印象笔记而生</em><br><a href="http://maxiang.info" target="_blank" rel="external">马克飞象，专为印象笔记打造的Markdown编辑器，非常推荐</a></p>
<p>发现一篇博客，可以参考下：<a href="http://blog.junyu.pro/posts/hexo/0006-qa-posts-based-on-markdown.html#align" target="_blank" rel="external">MarkDown使用教程</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo使用方法]]></title>
      <url>tbwang.win/Hexo%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html</url>
      <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/3949443-f897aef7850fccf4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a id="more"></a></p>
<h3 id="Hexo-添加搜索功能"><a href="#Hexo-添加搜索功能" class="headerlink" title="Hexo 添加搜索功能"></a>Hexo 添加搜索功能</h3><blockquote>
<p>打开终端工具进入hexo所在目录，执行下列语句安装插件</p>
</blockquote>
<p><code>1. $ npm install hexo-generator-searchdb --save</code></p>
<blockquote>
<p>在根目录的<strong>_config.yml</strong>文件中添加下列配置</p>
</blockquote>
<pre><code>search:
path: search.xml
field: post
format: html
limit: 10000
</code></pre><blockquote>
<p>3.效果如下</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/3949443-7afee89c35777dac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h3 id="Hexo更换主题"><a href="#Hexo更换主题" class="headerlink" title="Hexo更换主题"></a>Hexo更换主题</h3><blockquote>
<p>首先通过终端工具将github上的主题下载到本地</p>
</blockquote>
<pre><code>1. git clone https://github.com/iissnan/hexo-theme-next  themes/next
</code></pre><blockquote>
<p>修改Hexo根目录下的<em>_config.yml</em>文件，将Theme变更为所下载的主题名，比如我们本次下载的主题名为<code>next</code>,那么就改为<code>next</code></p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/3949443-162d2e9bbf31e8ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="更改所选主题"></p>
<h3 id="关于添加居中模块"><a href="#关于添加居中模块" class="headerlink" title="关于添加居中模块"></a>关于添加居中模块</h3><pre><code>&lt;blockquote class=&quot;blockquote-center&quot;&gt;添加居中模块&lt;/blockquote&gt;
</code></pre><blockquote class="blockquote-center">添加居中模块</blockquote>

<h3 id="关于如何修改内容区域宽度"><a href="#关于如何修改内容区域宽度" class="headerlink" title="关于如何修改内容区域宽度"></a>关于如何修改内容区域宽度</h3><p><code>next</code>对内容的宽度的设定如下：</p>
<blockquote>
<p>00px，当屏幕宽度 &lt; 1600px<br>900px，当屏幕宽度 &gt;= 1600px<br>移动设备下，宽度自适应</p>
</blockquote>
<p> 如果你需要修改内容的宽度，同样需要编辑样式文件。编辑主题的 <code>source\css\_variables\custom.styl</code>文件，修改为</p>
<pre><code>// 修改成你期望的宽度
$content-desktop = 700px
// 当视窗超过 1600px 后的宽度
$content-desktop-large = 900px
</code></pre><h3 id="代码行、代码块样式更改"><a href="#代码行、代码块样式更改" class="headerlink" title="代码行、代码块样式更改"></a>代码行、代码块样式更改</h3><p>以next主题为例，找到<code>next\source\css\components\highlight\highlight.styl</code>文件</p>
<blockquote>
<p>编辑代码行</p>
</blockquote>
<p>找到<code>code {</code>部分，将其中的<code>color</code>和<code>background</code>更改为你想要的样式</p>
<blockquote>
<p>编辑代码块</p>
</blockquote>
<p>找到<code>$code-block {</code>部分的 <code>background</code>更改为你要的颜色，字体的颜色需要找到<code>pre {@extend $code-block;code {</code>部分，将<code>color</code>的颜色更改</p>
<blockquote>
<p>代码语言样式选择</p>
</blockquote>
<p>使用三个单引号 + 所选语言 + 代码内容 + 三个单引号<br>    ``` java<br>       代码详情<br>    ```</p>
<p>下面是示例样式<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 这是一段java代码</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> class <span class="title">Test</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="comment">//TODO</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h3><blockquote>
<p>插件的基本使用命令</p>
</blockquote>
<p>安装插件： <strong>npm install 插件名 –save</strong><br>卸载插件： <strong>npm uninstall 插件名</strong><br>更新插件和博客框架（需要在 E:\git_work_space\hexo 目录下）： <strong>npm update</strong><br>它实质上是通过项目根目录下 package.json 文件更新各大组件</p>
<blockquote>
<p>必备插件</p>
</blockquote>
<p>支持RSS： <strong>npm install hexo-generator-feed –save</strong><br>生成站点地图： <strong>npm install hexo-generator-sitemap –save</strong><br>生成百度站点地图： <strong>npm install hexo-generator-baidu-sitemap –save</strong><br>HTML 压缩： <strong>npm install hexo-html-minifier –save</strong><br>JavaScript 压缩： <strong>npm install hexo-uglify –save</strong><br>CSS 压缩插件： <strong>npm install hexo-clean-css –save</strong><br>SEO优化： <strong>npm install hexo-generator-seo-friendly-sitemap</strong></p>
<h3 id="Hexo使用方法参考-博客链接"><a href="#Hexo使用方法参考-博客链接" class="headerlink" title="Hexo使用方法参考-博客链接"></a>Hexo使用方法参考-博客链接</h3><p><a href="https://neveryu.github.io/2016/09/30/hexo-next-two/#more" target="_blank" rel="external">Hexo-NexT搭建个人博客</a><br><a href="http://blog.junyu.pro/posts/hexo/0010-hexo-learn-from-Never-yu.html" target="_blank" rel="external">Hexo博客设置进阶</a><br><a href="http://www.arao.me/2015/hexo-next-theme-optimize-duoshuo/" target="_blank" rel="external">动动手指，给你的Hexo站点添加最近访客（多说篇）</a><br><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">Hexo你的博客</a></p>
]]></content>
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[关于我]]></title>
      <url>tbwang.win/about/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title></title>
      <url>tbwang.win/categories/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title></title>
      <url>tbwang.win/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
